{"version":3,"file":"main.js","mappings":"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","sources":["webpack://game-dwarves-updated-/./src/js/board.js","webpack://game-dwarves-updated-/./src/js/dwarfMoving.js","webpack://game-dwarves-updated-/./src/js/app.js","webpack://game-dwarves-updated-/./src/js/startGame.js","webpack://game-dwarves-updated-/./src/index.js"],"sourcesContent":["export default class BoardWithDwarf {\n  constructor(container) {\n    this.container = document.querySelector(container);\n    this.boardEl = this.container.querySelector('.board');\n    this.points = this.container.querySelector('.points');\n    this.boardSize = 4;\n    this.cells = [];\n  }\n\n  startDrawing() {\n    this.drawPoints();\n    this.drawBoard();\n  }\n\n  drawPoints() {\n    this.points.innerHTML = `\n      <div class=\"points__player\">\n        Игрок: <span class=\"points__player-number\">0</span>\n      </div>\n      <div class=\"points__dwarf\">\n        Гном: <span class=\"points__dwarf-number\">0</span>\n      </div>\n    `;\n    this.playerPoints = this.points.querySelector('.points__player-number');\n    this.dwarfPoints = this.points.querySelector('.points__dwarf-number');\n  }\n\n  drawBoard() {\n    for (let i = 0; i < this.boardSize ** 2; i++) {\n      const cellEl = document.createElement('div');\n      cellEl.classList.add('board__cell', 'cell');\n      this.boardEl.append(cellEl);\n    }\n\n    this.cells = Array.from(this.boardEl.children);\n  }\n\n  showPopup(text) {\n    this.popUp = document.createElement('div');\n    this.popUp.classList.add('popup');\n    this.popUp.innerHTML = `\n      <div class=\"popup__container\">\n        <div class='popup__close'>\n          <img src='./images/cross.svg' class='popup__close-img'>\n        </div>\n        <p class='popup__text'>${text}</p>\n      </div>\n    `;\n    this.container.append(this.popUp);\n\n    this.popUpClose = this.popUp.querySelector('.popup__close');\n    this.addEventForClose();\n  }\n\n  addEventForClose() {\n    this.popUpClose.addEventListener('click', () => {\n      this.popUp.remove();\n      this.resetPoints();\n    });\n  }\n\n  resetPoints() {\n    this.playerPoints.textContent = 0;\n    this.dwarfPoints.textContent = 0;\n  }\n}\n","export default class DwarfMoving {\n  constructor(board) {\n    this.board = board;\n    this.dwarf = null;\n\n    this.calcPoints = this.calcPoints.bind(this);\n  }\n\n  createDwarf() {\n    this.dwarf = document.createElement('div');\n    this.dwarf.classList.add('board__char', 'dwarf');\n    this.dwarf.innerHTML = '<img src=\"./images/goblin.png\" alt=\"dwarf\" class=\"dwarf__img\">';\n\n    const firstCell = this.getRandomCell();\n    this.cellWithDwarf = firstCell;\n    this.cellWithDwarf.append(this.dwarf);\n    this.dwarf.addEventListener('click', this.calcPoints);\n    this.startMovingDwarf();\n  }\n\n  calcPoints(e) {\n    const dwarf = e.target.closest('.dwarf');\n    if (dwarf) {\n      this.board.playerPoints.textContent++;\n      dwarf.remove();\n      clearInterval(this.moveDwarfInterval);\n      this.createDwarf();\n    }\n  }\n\n  startMovingDwarf() {\n    if (this.moveDwarfInterval) {\n      clearInterval(this.moveDwarfInterval);\n    }\n\n    this.moveDwarfInterval = setInterval(() => {\n      if (this.dwarf) {\n        if (++this.board.dwarfPoints.textContent >= 5) {\n          clearInterval(this.moveDwarfInterval);\n          this.board.showPopup('Вы проиграли.');\n        }\n        this.moveDwarf();\n      }\n    }, 1000);\n  }\n\n  moveDwarf() {\n    let newCell;\n    do {\n      newCell = this.getRandomCell();\n    } while (newCell === this.cellWithDwarf);\n\n    this.cellWithDwarf.querySelector('.dwarf').remove();\n    newCell.append(this.dwarf);\n    this.dwarf.classList.remove('dwarf_hidden');\n    this.cellWithDwarf = newCell;\n  }\n\n  getRandomCell() {\n    const randomIndex = Math.floor(Math.random() * this.board.cells.length);\n    return this.board.cells[randomIndex];\n  }\n}\n","import BoardWithDwarf from './board';\nimport DwarfMoving from './dwarfMoving';\n\nexport default class Game {\n  constructor() {\n    this.board = new BoardWithDwarf('.game__container');\n    this.gamePlay = new DwarfMoving(this.board);\n  }\n\n  init() {\n    this.board.startDrawing();\n    this.gamePlay.createDwarf();\n  }\n}\n","import Game from './app';\n\nconst game = new Game();\ngame.init();\n","import './css/game.css';\nimport './js/startGame';\n"],"names":["BoardWithDwarf","constructor","container","document","querySelector","boardEl","points","boardSize","cells","startDrawing","drawPoints","drawBoard","innerHTML","playerPoints","dwarfPoints","i","cellEl","createElement","classList","add","append","Array","from","children","showPopup","text","popUp","popUpClose","addEventForClose","addEventListener","remove","resetPoints","textContent","DwarfMoving","board","dwarf","calcPoints","bind","createDwarf","firstCell","getRandomCell","cellWithDwarf","startMovingDwarf","e","target","closest","clearInterval","moveDwarfInterval","setInterval","moveDwarf","newCell","randomIndex","Math","floor","random","length","Game","gamePlay","init","game"],"sourceRoot":""}